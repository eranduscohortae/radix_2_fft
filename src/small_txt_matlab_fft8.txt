Real.teil + Imaginär.teil
00000011.11100000 + 10000101.10100000
00000100.10110000 + 00000100.11100000
10000110.01100000 + 00000101.11100000
00001101.10000000 + 00001001.10100000
10001000.11100000 + 00001110.01100000
00000110.01110000 + 00000011.11000000 
00000011.10100000 + 00000111.10000000
00000110.01100000 + 00000011.01000000
Realteil + Imaginärteil
0000001111100000 + 1000010110100000
0000010010110000 + 0000010011100000
1000011001100000 + 0000010111100000
0000110110000000 + 0000100110100000
1000100011100000 + 0000111001100000
0000011001110000 + 0000001111000000 
0000001110100000 + 0000011110000000
0000011001100000 + 0000001101000000






Realteil + Imaginärteil i
3.875  + -5.625i
4.6875 + 4.875i
-6.375 + 5.875i
13.5   + 9.625i
-8.875 + 14.375i
6.4375 + 3.75i
3.625  + 7.5i
6.375  + 3.25i



FFT-8
23.2500000000000 + 43.6250000000000i
10.1527281758685 - 17.5130095501071i
-6.50000000000000 + 4.12500000000000i
25.9538735419297 - 30.0883883476483i
-38.7500000000000 + 0.625000000000000i	
12.0972718241315 - 2.48699044989293i	
2.00000000000000 - 13.3750000000000i	
2.79612645807028 - 29.9116116523517i


Code:
x = [3.875  - 5.625i, 4.6875 + 4.875i, -6.375 + 5.875i, 13.5   + 9.625i, -8.875 + 14.375i, 6.4375 + 3.75i, 3.625  + 7.5i, 6.375  + 3.25i];


X = fft(x);

disp(X);




FFT-8 binär mit chattie + matlab
%%%%%%%%%%
achtung, umwandlung mit zweierkomplement -> wenig sinnvoll:
% Gegebene Daten
x = [3.875  - 5.625i, ...
     4.6875 + 4.875i, ...
     -6.375 + 5.875i, ...
     13.5   + 9.625i, ...
     -8.875 + 14.375i, ...
     6.4375 + 3.75i, ...
     3.625  + 7.5i, ...
     6.375  + 3.25i];

% Berechne die FFT
X = fft(x);

% Skaliere und runde die FFT-Ergebnisse für die Binärumwandlung
% Achtung: Die Skalierungsfaktoren und der Rundungsmechanismus sollten
% basierend auf dem Anwendungskontext angepasst werden.
realPart = real(X);
imagPart = imag(X);

% Konvertiere in Binärform
% Achtung: MATLABs dec2bin kann negative Zahlen nicht direkt umwandeln.
% Negative Zahlen erfordern eine vorherige Anpassung, z.B. durch eine
% Zweierkomplementdarstellung, hier verwenden wir jedoch eine einfache
% Methode zur Demonstration.
for k = 1:length(X)
    % Für den Realteil
    if realPart(k) >= 0
        realBin = dec2bin(round(realPart(k)), 16);
    else
        realBin = dec2bin(round(-realPart(k)), 16); % Einfache Darstellung negativer Werte
    end
    
    % Für den Imaginärteil
    if imagPart(k) >= 0
        imagBin = dec2bin(round(imagPart(k)), 16);
    else
        imagBin = dec2bin(round(-imagPart(k)), 16); % Einfache Darstellung negativer Werte
    end
    
    % Ausgabe der Binärzahlen
    fprintf('%s + %si\n', realBin, imagBin);
end

%%%%%%%%%%
